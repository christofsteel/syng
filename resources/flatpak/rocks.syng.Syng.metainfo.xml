<?xml version="1.0" encoding="UTF-8"?>
<component type="desktop-application">
  <id>rocks.syng.Syng</id>

  <name>Syng</name>
  <summary>All-in-one karaoke software</summary>

  <developer id="rocks.syng">
    <name>Christoph Stahl</name>
  </developer>

  <metadata_license>CC-BY-SA-4.0</metadata_license>
  <project_license>AGPL-3.0-or-later</project_license>
  <content_rating type="oars-1.1" />

  <url type="homepage">https://syng.rocks</url>
  <url type="bugtracker">https://github.com/christofsteel/syng/issues</url>
  <url type="vcs-browser">https://github.com/christofsteel/syng</url>

  <screenshots>
    <screenshot type="default">
      <image>https://raw.githubusercontent.com/christofsteel/syng/6472ef4b5a8a71389b8c3bbf2d4141e34c1010ad/resources/screenshots/syng.png</image>
      <caption>Syng configuration window</caption>
    </screenshot>
    <screenshot>
      <image>https://raw.githubusercontent.com/christofsteel/syng/6472ef4b5a8a71389b8c3bbf2d4141e34c1010ad/resources/screenshots/syng-web.png</image>
      <caption>Syng web interface</caption>
    </screenshot>
  </screenshots>


  <releases>
    <release version="2.0.1" date="2024-09-30">
      <description>
        <p>
          <em>Fixes</em>:
        </p>
        <ul>
          <li>Fixes s3 storage not working</li>
        </ul>
        <p>
          <em>Changes</em>:
        </p>
        <ul>
          <li>Notifications are forwarded to the user interface</li>
        </ul>
      </description>
    </release>
    <release version="2.0.0" date="2024-09-22">
      <description>
        <p>
          Initial release of version 2.
        </p>
      </description>
    </release>
  </releases>

  <description>
    <p>
      Syng is an all-in-one karaoke software, consisting of a <em>backend server</em>, a <em>web frontend</em> and a <em>playback client</em>. Karaoke performers can search a library using the web frontend, and add songs to the queue. The playback client retrieves songs from the backend server and plays them in order.
    </p>
    <p>
      To host a karaoke event, you only need to use this playback client, as you can use a publicly available instance (See project page).
    </p>
    <p>
      Currently, songs can be accessed using the following sources:
    </p>
    <ul>
      <li>
        <em>YouTube</em>. The backend server queries YouTube for the song and forwards the URL to the playback client. The playback client then downloads the video from YouTube for playback.
      </li>
      <li>
        <em>S3</em>. The backend server holds a list of all file paths accessible through the s3 storage, and forwards the chosen path to the playback client. The playback client then downloads the needed files from the s3 for playback.
      </li>
      <li>
        <em>Files</em>. Same as S3, but all files reside locally on the playback client.
      </li>
    </ul>
    <p>
      The playback client uses <code>mpv</code> for playback and can therefore play a variety of file formats, such as <code>mp3+cdg</code>, <code>webm</code>, <code>mp4</code>, ...
    </p>
  </description>

  <categories>
    <category>X-Karaoke</category>
    <category>Video</category>
    <category>Audio</category>
    <category>AudioVideo</category>
    <category>Network</category>
  </categories>

  <keywords>
    <keyword>karaoke</keyword>
    <keyword>music</keyword>
    <keyword>video</keyword>
    <keyword>audio</keyword>
    <keyword>network</keyword>
    <keyword>mpv</keyword>
    <keyword>youtube</keyword>
  </keywords>

  <branding>
    <color type="primary" scheme_preference="dark">#008000</color>
    <color type="primary" scheme_preference="light">#67bf37</color>
  </branding>

  <launchable type="desktop-id">rocks.syng.Syng.desktop</launchable>
</component>
